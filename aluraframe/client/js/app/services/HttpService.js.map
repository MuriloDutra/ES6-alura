{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAAaA,W;;;;;;;kDAEKC,G,EAAI;AACd,4BAAGA,IAAIC,EAAP,EACI,OAAOD,GAAP;;AAEJ,8BAAM,IAAIE,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACH;;;wCAEGC,G,EAAI;AAAA;;AACJ,+BAAOC,MAAMD,GAAN,EACFE,IADE,CACG;AAAA,mCAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,yBADH,EAEFM,IAFE,CAEG;AAAA,mCAAON,IAAIQ,IAAJ,EAAP;AAAA,yBAFH,CAAP;AAGH;;;yCAEIJ,G,EAAKK,I,EAAK;AAAA;;AAEX,+BAAOJ,MAAMD,GAAN,EAAW;AACdM,qCAAS,EAAC,gBAAiB,kBAAlB,EADK;AAEdC,oCAAQ,MAFM;AAGdC,kCAAMC,KAAKC,SAAL,CAAeL,IAAf,CAHQ,CAGa;AAHb,yBAAX,EAKNH,IALM,CAKD;AAAA,mCAAO,OAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,yBALC,CAAP;AAMH","file":"HttpService.js","sourcesContent":["export class HttpService{\n\n    _handleErrors(res){\n        if(res.ok)\n            return res;\n\n        throw new Error(res.statusText);\n    }\n    \n    get(url){\n        return fetch(url)\n            .then(res => this._handleErrors(res))\n            .then(res => res.json());\n    }\n\n    post(url, dado){\n\n        return fetch(url, {\n            headers: {'Content-type' : 'application/json'},\n            method: 'post',\n            body: JSON.stringify(dado) // usando JSON.stringifly para converter objeto em uma string.\n        })\n        .then(res => this._handleErrors(res));\n    }\n}"]}
{"version":3,"sources":["../../app-es6/services/OldHttpService.js"],"names":["HttpService","url","Promise","resolve","reject","xhr","XMLHttpRequest","open","onreadystatechange","readyState","status","JSON","parse","responseText","console","log","send","dado","setRequestHeader","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAMA,uB;;;;;;;wCAEEC,G,EAAI;AACJ,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIC,MAAM,IAAIC,cAAJ,EAAV;AACAD,gCAAIE,IAAJ,CAAS,KAAT,EAAgBN,GAAhB,EAHoC,CAGd;AACtBI,gCAAIG,kBAAJ,GAAyB,YAAM;AAAE;AAC7B;;;;;;;;AAQA,oCAAGH,IAAII,UAAJ,IAAkB,CAArB,EAAuB;AACnB,wCAAGJ,IAAIK,MAAJ,IAAc,GAAjB,EAAsB;AAClBP,gDAAQQ,KAAKC,KAAL,CAAWP,IAAIQ,YAAf,CAAR,EADJ,CAC2C;AAD3C,yCAEI;AACAC,oDAAQC,GAAR,CAAYV,IAAIQ,YAAhB;AACAT,mDAAOC,IAAIQ,YAAX;AACH;AACJ;AACJ,6BAjBD;AAkBAR,gCAAIW,IAAJ;AACH,yBAvBM,CAAP;AAwBH;;;yCAEIf,G,EAAKgB,I,EAAM;AACZ,+BAAO,IAAIf,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIC,MAAM,IAAIC,cAAJ,EAAV;AACAD,gCAAIE,IAAJ,CAAS,MAAT,EAAiBN,GAAjB,EAAsB,IAAtB;AACAI,gCAAIa,gBAAJ,CAAqB,cAArB,EAAqC,kBAArC;;AAEAb,gCAAIG,kBAAJ,GAAyB,YAAM;AAC3B,oCAAIH,IAAII,UAAJ,IAAkB,CAAtB,EAAyB;AACrB,wCAAIJ,IAAIK,MAAJ,IAAc,GAAlB,EACIP,QAAQQ,KAAKC,KAAL,CAAWP,IAAIQ,YAAf,CAAR,EADJ,KAGIT,OAAOC,IAAIQ,YAAX;AACP;AACJ,6BAPD;;AASAR,gCAAIW,IAAJ,CAASL,KAAKQ,SAAL,CAAeF,IAAf,CAAT,EAfoC,CAeJ;AACnC,yBAhBM,CAAP;AAkBH","file":"OldHttpService.js","sourcesContent":["class HttpService{\n\n    get(url){\n        return new Promise((resolve, reject) => {\n\n            let xhr = new XMLHttpRequest();\n            xhr.open('GET', url); //A URL está assim pois o servidor é local\n            xhr.onreadystatechange = () => { // toda vez que o estado de 'xhr' mudar, esta função será executada\n                /**Estado de uma requisição AJAX\n                 * \n                 * 0: requisição ainda não iniciada\n                 * 1: conexão com o servidor estabelecidas\n                 * 2: requisição recebida\n                 * 3: processando requisição\n                 * 4: requisição concluída e a resposta esta pronta */\n\n                if(xhr.readyState == 4){\n                    if(xhr.status == 200) //Quando a resposta for OK\n                        resolve(JSON.parse(xhr.responseText)); //convertendo a resposta para JSON\n                    else{\n                        console.log(xhr.responseText);\n                        reject(xhr.responseText);\n                    }\n                }\n            };\n            xhr.send();\n        });\n    }\n\n    post(url, dado) {\n        return new Promise((resolve, reject) => {\n\n            let xhr = new XMLHttpRequest();\n            xhr.open(\"POST\", url, true);\n            xhr.setRequestHeader(\"Content-type\", \"application/json\");\n            \n            xhr.onreadystatechange = () => {\n                if (xhr.readyState == 4) {\n                    if (xhr.status == 200) \n                        resolve(JSON.parse(xhr.responseText));\n                    else\n                        reject(xhr.responseText);\n                }\n            };\n            \n            xhr.send(JSON.stringify(dado)); // usando JSON.stringifly para converter objeto em uma string.\n        });\n\n    }\n}"]}
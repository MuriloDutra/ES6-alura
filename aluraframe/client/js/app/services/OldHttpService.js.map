{"version":3,"sources":["../../app-es6/services/OldHttpService.js"],"names":["HttpService","url","Promise","resolve","reject","xhr","XMLHttpRequest","open","onreadystatechange","readyState","status","JSON","parse","responseText","console","log","send","dado","setRequestHeader","stringify"],"mappings":";;;;;;IAAMA,W;;;;;;;4BAEEC,G,EAAI;AACJ,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,oBAAIC,MAAM,IAAIC,cAAJ,EAAV;AACAD,oBAAIE,IAAJ,CAAS,KAAT,EAAgBN,GAAhB,EAHoC,CAGd;AACtBI,oBAAIG,kBAAJ,GAAyB,YAAM;AAAE;AAC7B;;;;;;;;AAQA,wBAAGH,IAAII,UAAJ,IAAkB,CAArB,EAAuB;AACnB,4BAAGJ,IAAIK,MAAJ,IAAc,GAAjB,EAAsB;AAClBP,oCAAQQ,KAAKC,KAAL,CAAWP,IAAIQ,YAAf,CAAR,EADJ,CAC2C;AAD3C,6BAEI;AACAC,wCAAQC,GAAR,CAAYV,IAAIQ,YAAhB;AACAT,uCAAOC,IAAIQ,YAAX;AACH;AACJ;AACJ,iBAjBD;AAkBAR,oBAAIW,IAAJ;AACH,aAvBM,CAAP;AAwBH;;;6BAEIf,G,EAAKgB,I,EAAM;AACZ,mBAAO,IAAIf,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,oBAAIC,MAAM,IAAIC,cAAJ,EAAV;AACAD,oBAAIE,IAAJ,CAAS,MAAT,EAAiBN,GAAjB,EAAsB,IAAtB;AACAI,oBAAIa,gBAAJ,CAAqB,cAArB,EAAqC,kBAArC;;AAEAb,oBAAIG,kBAAJ,GAAyB,YAAM;AAC3B,wBAAIH,IAAII,UAAJ,IAAkB,CAAtB,EAAyB;AACrB,4BAAIJ,IAAIK,MAAJ,IAAc,GAAlB,EACIP,QAAQQ,KAAKC,KAAL,CAAWP,IAAIQ,YAAf,CAAR,EADJ,KAGIT,OAAOC,IAAIQ,YAAX;AACP;AACJ,iBAPD;;AASAR,oBAAIW,IAAJ,CAASL,KAAKQ,SAAL,CAAeF,IAAf,CAAT,EAfoC,CAeJ;AACnC,aAhBM,CAAP;AAkBH","file":"OldHttpService.js","sourcesContent":["class HttpService{\r\n\r\n    get(url){\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let xhr = new XMLHttpRequest();\r\n            xhr.open('GET', url); //A URL está assim pois o servidor é local\r\n            xhr.onreadystatechange = () => { // toda vez que o estado de 'xhr' mudar, esta função será executada\r\n                /**Estado de uma requisição AJAX\r\n                 * \r\n                 * 0: requisição ainda não iniciada\r\n                 * 1: conexão com o servidor estabelecidas\r\n                 * 2: requisição recebida\r\n                 * 3: processando requisição\r\n                 * 4: requisição concluída e a resposta esta pronta */\r\n\r\n                if(xhr.readyState == 4){\r\n                    if(xhr.status == 200) //Quando a resposta for OK\r\n                        resolve(JSON.parse(xhr.responseText)); //convertendo a resposta para JSON\r\n                    else{\r\n                        console.log(xhr.responseText);\r\n                        reject(xhr.responseText);\r\n                    }\r\n                }\r\n            };\r\n            xhr.send();\r\n        });\r\n    }\r\n\r\n    post(url, dado) {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let xhr = new XMLHttpRequest();\r\n            xhr.open(\"POST\", url, true);\r\n            xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n            \r\n            xhr.onreadystatechange = () => {\r\n                if (xhr.readyState == 4) {\r\n                    if (xhr.status == 200) \r\n                        resolve(JSON.parse(xhr.responseText));\r\n                    else\r\n                        reject(xhr.responseText);\r\n                }\r\n            };\r\n            \r\n            xhr.send(JSON.stringify(dado)); // usando JSON.stringifly para converter objeto em uma string.\r\n        });\r\n\r\n    }\r\n}"]}
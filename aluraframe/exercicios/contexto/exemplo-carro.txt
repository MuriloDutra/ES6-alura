-   PRIMEIRO CÓDIGO

    <script>
        let carro = {
            velocidade: 100,
            acelera : () =>  {
                console.log(this);
                console.log(`Carro a ${this.velocidade} km por hora!`);
            }
        };
        carro.acelera();
    </script>

    Este é o motivo pelo qual o código acima NÃO funciona - 
    
        Como escrevemos nosso código dentro da tag script, não estamos dentro de um método ou de outra função, 
        estamos no escopo de window, ou seja, o escopo global. Lembre-se que o this de uma arrow function é léxico,
        isto é, estático e pega emprestado seu valor do ambiente no qual foi declarado. Como o this naquele ponto em que
        a arrow function foi declarada é window, seu valor será window. É claro que o escopo global não possui a propriedade velocidade.
        Veja que este é um exemplo no qual a arrow function atrapalha.



-   SEGUNDO CÓDIGO

    <script>
        let carro = {
            velocidade: 100,
            acelera :function() {
                console.log(this);
                console.log(`Carro a ${this.velocidade} km por hora!`);
            }
        };
        carro.acelera();
    </script>


    Este é o motivo pelo o código acima, que é parecido com o primeiro, FUNCIONA e o primeiro NÃO - 

        O uso de uma function tradicional é o mais indicado, neste caso. O this de uma function é dinâmico e muda de acordo com o contexto de evocação da função.
        Como nossa função está sendo chamada a partir de um objeto, por padrão, o this dessa função será o objeto.